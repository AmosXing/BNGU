import cv2
import numpy as np

def detect_arrow_lightbars(image_path="img2.png", save_path="result2.png"):
    # 读取图像
    image = cv2.imread(image_path)
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # 高斯模糊
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)

    # 二值化处理
    _, binary = cv2.threshold(blurred, 200, 255, cv2.THRESH_BINARY)

    contours, _ = cv2.findContours(binary, cv2.RETR_LIST, cv2.CHAIN_APPROX_NONE)

    output_image = image.copy()

    for contour in contours:
        epsilon = 0.03 * cv2.arcLength(contour, True)
        approx = cv2.approxPolyDP(contour, epsilon, True)

        area = cv2.contourArea(contour)
        height,width = image.shape[:2]
        tarea = height * width
        min_area = tarea * 0.002
        max_area = tarea * 0.01

        if min_area < area < max_area and 5 <= len(approx) <= 7:
            x, y, w, h = cv2.boundingRect(contour)
            cv2.rectangle(output_image, (x, y), (x + w, y + h), (0, 0, 255), 2)

    cv2.imwrite(save_path, output_image)

    cv2.imshow("Detected Arrows", output_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

if __name__ == "__main__":
    detect_arrow_lightbars()
